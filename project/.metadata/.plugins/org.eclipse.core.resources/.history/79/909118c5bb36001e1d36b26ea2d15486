<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>배열유형</title>
</head>
<body>
<input type="button" value="배열1" onclick="aaa()">
<input type="button" value="배열2" onclick="bbb()">
<input type="button" value="배열3" onclick="ccc()">

<!-- 실무에서 가장 많이 쓰이는 형태는-->
<input type="button" value="배열4" onclick="ddd()"> 
</body>
<!-- 데이터 찍는곳 예시-->
<div id="box">
	<!-- 
		<ul>
			<li>아이디 : </li>
			<li>고객명 : </li>
			<li>나이 : </li>
		</ul>
		이런식으로 데이터가 찍힐 것임
	-->
</div>
<script>
	function aaa(){
			// {}중괄호 배열 구조는 대표 키가 있으며, 단! 대표키는 절대 중복해서 사용하면 안됨
			//중복해서 사용시 끝에 값만 출력이 됨 키 값을 다르게 해야 제대로 찍힘
			var data = {
				"myinfo1" : ["hong","25","hong@nate.com"],
				"myinfo2" : ["kim","30","kim@nate.com"]
			}
			console.log(data);
		}
		//대표키가 table명으로 사용이 되고 대표키 안에 각각의 파트별로 보조 키 컬럼명을 이용하여 배열을 설계하는 방식
		//id name age 칼럼이(보조키)가 한 덩어리로 찍혀서 length찍어보면 2개로 찍힘
		function bbb(){
			var data = {
				"myinfo" : [
				{
					"id":"hong",
					"name":"홍길동",
					"age":"25"
				},
				{
					"id":"kim",
					"name":"김유신",
					"age":"30"
				}
					
				]
			}
		//대표키 myinfo 안에 몇개가 있는지 확인
		var ea = data["myinfo"].length;
		//console.log(ea);
		
		var w =0;
		var html = document.getElementById("box");
		while(w < ea){
			console.log(data["myinfo"][w]["id"]);
			html.innerHTML += `
			<ul>
				<li>아이디 : `+ data["myinfo"][w]["id"]+` </li>
				<li>고객명 :`+ data["myinfo"][w]["name"]+ `</li>
				<li>나이 :` +data["myinfo"][w]["age"]+ `</li>
			</ul>
			`;
			w++;
		}
	}
	//대표키 = 테이블명 이며 그 외에 2차 배열 형태로 데이터 값을 순서대로 나열하여 출력하는 배열형태
	function ccc(){
		var data = {
			"myinfo":[
				["hong","25","hong@nate.com"],
				["kim","30","kim@nate.com"]
			]
		}
		console.log(data);
	}
	function ddd(){
		var data ={
			"myinfo":[
			{"id":"hong","name":"홍길동","age":"25",
			"log_history":[
				{"last_day":"2023-08-09"}
			]
			},
			]
		}
		
		
	}

	

	
	/*
	html.innerHTML = 
	<ul>
		<li>아이디 : </li>
		<li>고객명 : </li>
		<li>나이 : </li>
	</ul>
	*/

	
</script>
</html>

















